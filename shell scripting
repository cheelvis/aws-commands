# shell scripting is a group of commands written in a sequence to automate repetitive work or tasks
# A shell is a program that provides an interface b/w a user and an OS kernel.
Some common types of shell include; bash, sh, ksh, c, etc.
# To know which type of shell is asigned to a user, run the command which $SHELL.
# To see the types of shells that an OS has the command is cat /etc/shells.
bash shell is the advanced shell and it's the default shell for most linux OSs.
A shell script always starts with #!/bin/bash, its known as shibang

sudo cat /etc/httpd/conf/httpd.conf | grep listen, command to see which port httpd is listening
# To remove a file the comand is rm -rf <file name>

#How  to run user defined shell script as a system command
eg how to get free RAM size in MB(magabytes)
run free -m, you will have an output as shown below

              total        used        free      shared  buff/cache   available
Mem:            978         127         422           0         427         709
Swap:             0           0           0
since you want to know only the free RAM size, run; free -m | awk 'NR==2{print $4, "MB(megabytes)"}'
create a shell script and put the above command inside. vi freeramsize, make the file exercutable, sudo chmod 755 <freeramsize>
copy the file you created to one of the predefined locations. to see the predefined locations, the command is echo $PATH. for ubuntu, you will as shown below.
/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin.

ctrl d will take you out of cat.
to add something in a file using the cat command, use two angle brackets (>>) eg, cat >> 'write here'

commend multiple lines in a code as follows; eg : ' 
                                                    line 1
                                                    line 2
                                                    line3
                                                    line x'
if you want to show commented lines in your output you can use the heredog delimeter as shown bellow.
cat << kreativ
this is hello text
another line
kreativ

## IF and elif conditions:


count=10

##if [ $count -eq 10 ] you can use square brackets or simple brackets if you want to use symbols eg (( $count > 10 ))

if [ $count -eq 10 ]
then
    echo 'the condition is true'
elif (( $count <= 9 ))
then
    echo 'the condition is true'

else
    echo 'the condition is false'
fi

##AND, OR condition
age=10

if [[ "$age" -gt 9  &&  "$age" -lt 40 ]] or [ "$age" -gt 9 ] && [ "$age" -lt 40 ] or [ "$age" -gt 9  -a  "$age" -lt 40 ] {AND syntax}
if [ "$age" -gt 20  -o  "$age" -lt 40 ] or [[ "$age" -gt 20  ||  "$age" -lt 40 ]] or [ "$age" -gt 20 ]  || [ "$age" -lt 40 ] {OR syntax}
then
    echo 'age is correct'
else
    echo 'age is not correct'
fi

## WHILE LOOP

number=2

while [ $number -lt 10 ]
do
  echo "$number"
  number=$(( number+2 ))
done
## UNTILL LOOP
numbner=1
untill [ $number -ge 10 ]
do
  echo $number
  number=$(( number+1 ))
done 

#FOR LOOP
for i in 1 2 3 4 5 or for i in {0..10} it will print 0 to 10 or for i in {0..10..2} it will count in incraement of 2 or for (( i=0; i<5; i++ ))
do
  echo $i
done
  
