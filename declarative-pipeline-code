pipeline{
    agent{
        label 'node1'
    }
    options {
        buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '10')
        timestamps()
        disableConcurrentBuilds()
    }
    parameters {
        choice choices: ['DEV', 'QA', 'PRE-PROD', 'PROD'], description: 'Environment name for code deployment', name: 'APP_ENV'
        string defaultValue: '', description: 'The version of the Java Application', name: 'app_version', trim: false
    }
    tools {
        maven 'MAVEN3'
    }
    stages{
        stage('code checkout'){
            steps{
                echo "code checkout"
                git credentialsId: 'github', url: 'https://github.com/cheelvis/PetClinic.git'
                
            }   
            
        }
        stage('code build'){
            steps{
                sh "mvn test-compile"
            }
        }
        stage('code analysis and unit test'){
            failFast true
            parallel {
                stage('unit test'){
                    steps {
                        sh "mvn test"
                    }
                }
                stage('sonarqube scan'){
                    environment{
                        SCANNER_HOME = tool 'sonarqube'
                    }
                    steps {
                        withSonarQubeEnv (installationName: 'sonarqube'){
                            sh "${SCANNER_HOME}/bin/sonar-scanner -Dproject.settings=sonar-project.properties"
                        }
                    }
                }
            }
        }
        stage('code package'){
            steps {
                sh "mvn package"
            }
        }
        stage('nexus uplaod'){
            steps {
                sh '''
                POM_VERSION=`grep "<version>" pom.xml | head -1 | awk -F "-" '{print $1}' | tail -c 6`
                curl -u admin:Passw0rd123! POST "ec2-3-135-19-215.us-east-2.compute.amazonaws.com:8081/service/rest/v1/components?repository=PetClinic" -H "accept: application/json" -H "Content-Type: multipart/form-data" -F "maven2.groupId=org.SampleOrg" -F "maven2.artifactId=petclinic" -F "maven2.version=${POM_VERSION}" -F "maven2.asset1=@${WORKSPACE}/target/petclinic.war" -F "maven2.asset1.extension=war"
                '''
            }
        }
        stage('code deployment'){
            steps{
               ansiblePlaybook installation: 'ANSIBLE29', playbook: '/home/ubuntu/playboos/deploy.yml' 
            }
        }
            
                
            
        
    }
}
